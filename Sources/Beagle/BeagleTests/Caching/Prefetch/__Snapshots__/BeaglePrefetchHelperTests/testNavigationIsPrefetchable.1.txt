  openExternalURL(Beagle.Expression<Swift.String>.value("http://localhost"), analytics: nil)  -->  NULL 

  openNativeRoute(Beagle.Navigate.OpenNativeRoute(route: Beagle.Expression<Swift.String>.value("path"), data: nil, shouldResetApplication: false), analytics: nil)  -->  NULL 

  openNativeRoute(Beagle.Navigate.OpenNativeRoute(route: Beagle.Expression<Swift.String>.value("path"), data: Optional(["data": "value"]), shouldResetApplication: false), analytics: nil)  -->  NULL 

  resetApplication(Beagle.Route.declarative(Beagle.Screen(id: nil, style: nil, safeArea: Optional(Beagle.SafeArea(top: Optional(true), leading: Optional(true), bottom: Optional(true), trailing: Optional(true))), navigationBar: nil, _child: Container(_children: Optional([]), _onInit: nil, context: nil, styleId: nil, id: nil, style: nil, accessibility: nil), context: nil)), controllerId: nil, navigationContext: nil, analytics: nil)  -->  NULL 

  resetApplication(Beagle.Route.remote(Beagle.Route.NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: Optional(true), fallback: nil, httpAdditionalData: nil)), controllerId: nil, navigationContext: nil, analytics: nil)  -->  NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: Optional(true), fallback: nil, httpAdditionalData: nil) 

  resetApplication(Beagle.Route.remote(Beagle.Route.NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: Optional(false), fallback: nil, httpAdditionalData: nil)), controllerId: nil, navigationContext: nil, analytics: nil)  -->  NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: Optional(false), fallback: nil, httpAdditionalData: nil) 

  resetStack(Beagle.Route.declarative(Beagle.Screen(id: nil, style: nil, safeArea: Optional(Beagle.SafeArea(top: Optional(true), leading: Optional(true), bottom: Optional(true), trailing: Optional(true))), navigationBar: nil, _child: Container(_children: Optional([]), _onInit: nil, context: nil, styleId: nil, id: nil, style: nil, accessibility: nil), context: nil)), navigationContext: nil, analytics: nil)  -->  NULL 

  resetStack(Beagle.Route.remote(Beagle.Route.NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: Optional(true), fallback: nil, httpAdditionalData: nil)), navigationContext: nil, analytics: nil)  -->  NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: Optional(true), fallback: nil, httpAdditionalData: nil) 

  resetStack(Beagle.Route.remote(Beagle.Route.NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: Optional(false), fallback: nil, httpAdditionalData: nil)), navigationContext: nil, analytics: nil)  -->  NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: Optional(false), fallback: nil, httpAdditionalData: nil) 

  pushStack(Beagle.Route.declarative(Beagle.Screen(id: nil, style: nil, safeArea: Optional(Beagle.SafeArea(top: Optional(true), leading: Optional(true), bottom: Optional(true), trailing: Optional(true))), navigationBar: nil, _child: Container(_children: Optional([]), _onInit: nil, context: nil, styleId: nil, id: nil, style: nil, accessibility: nil), context: nil)), controllerId: nil, navigationContext: nil, analytics: nil)  -->  NULL 

  pushStack(Beagle.Route.remote(Beagle.Route.NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: Optional(true), fallback: nil, httpAdditionalData: nil)), controllerId: nil, navigationContext: nil, analytics: nil)  -->  NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: Optional(true), fallback: nil, httpAdditionalData: nil) 

  pushStack(Beagle.Route.remote(Beagle.Route.NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: Optional(false), fallback: nil, httpAdditionalData: nil)), controllerId: nil, navigationContext: nil, analytics: nil)  -->  NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: Optional(false), fallback: nil, httpAdditionalData: nil) 

  pushStack(Beagle.Route.declarative(Beagle.Screen(id: nil, style: nil, safeArea: Optional(Beagle.SafeArea(top: Optional(true), leading: Optional(true), bottom: Optional(true), trailing: Optional(true))), navigationBar: nil, _child: Container(_children: Optional([]), _onInit: nil, context: nil, styleId: nil, id: nil, style: nil, accessibility: nil), context: nil)), controllerId: Optional("customId"), navigationContext: nil, analytics: nil)  -->  NULL 

  pushStack(Beagle.Route.remote(Beagle.Route.NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: Optional(true), fallback: nil, httpAdditionalData: nil)), controllerId: Optional("customId"), navigationContext: nil, analytics: nil)  -->  NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: Optional(true), fallback: nil, httpAdditionalData: nil) 

  pushStack(Beagle.Route.remote(Beagle.Route.NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: Optional(false), fallback: nil, httpAdditionalData: nil)), controllerId: Optional("customId"), navigationContext: nil, analytics: nil)  -->  NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: Optional(false), fallback: nil, httpAdditionalData: nil) 

  pushView(Beagle.Route.declarative(Beagle.Screen(id: nil, style: nil, safeArea: Optional(Beagle.SafeArea(top: Optional(true), leading: Optional(true), bottom: Optional(true), trailing: Optional(true))), navigationBar: nil, _child: Container(_children: Optional([]), _onInit: nil, context: nil, styleId: nil, id: nil, style: nil, accessibility: nil), context: nil)), navigationContext: nil, analytics: nil)  -->  NULL 

  pushView(Beagle.Route.remote(Beagle.Route.NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: Optional(true), fallback: nil, httpAdditionalData: nil)), navigationContext: nil, analytics: nil)  -->  NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: Optional(true), fallback: nil, httpAdditionalData: nil) 

  pushView(Beagle.Route.remote(Beagle.Route.NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: Optional(false), fallback: nil, httpAdditionalData: nil)), navigationContext: nil, analytics: nil)  -->  NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: Optional(false), fallback: nil, httpAdditionalData: nil) 

  popStack(navigationContext: nil, analytics: nil)  -->  NULL 

  popView(navigationContext: nil, analytics: nil)  -->  NULL 

  popToView(Beagle.Expression<Swift.String>.value("path"), navigationContext: nil, analytics: nil)  -->  NULL 

